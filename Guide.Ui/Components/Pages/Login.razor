@page "/login"
@using Guide.Data.Models.Users
@using Guide.Ui.Components.Services
@inject NavigationManager NavigationManager
@inject AuthenticationService AuthService

<PageTitle>Вход</PageTitle>

<style>
    .login-form {
        max-width: 400px;
        margin: 2rem auto;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 10px;
        background-color: #f9f9f9;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .login-form h3 {
        text-align: center;
        color: #333;
        margin-bottom: 20px;
        font-size: 1.5rem;
        font-weight: 500;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .form-group label {
        display: block;
        margin-bottom: 0.3rem;
        font-weight: 500;
        color: #555;
        text-align: left;
    }

    .form-group input {
        display: block;
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 1rem;
        box-sizing: border-box;
    }

    button[type="submit"] {
        width: 100%;
        padding: 10px 15px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s;
        margin-top: 1rem;
    }

    button[type="submit"]:hover {
        background-color: #0056b3;
    }

    .error-message {
        color: #d9534f;
        padding: 10px;
        margin-top: 15px;
        font-size: 0.9rem;
        text-align: left;
        background-color: #f8d7da;
        border: 1px solid #f5c6cb;
        border-radius: 5px;
    }

    .register-link {
        text-align: center;
        margin-top: 15px;
    }

    .register-link a {
        color: #007bff;
        text-decoration: none;
    }

    .register-link a:hover {
        text-decoration: underline;
    }
</style>

<div class="login-form">
    <h3>Вход в систему</h3>

    <EditForm Model="@_loginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Имя пользователя:</label>
            <InputText class="form-control" @bind-Value="_loginModel.UserName" />
            <ValidationMessage For="@(() => _loginModel.UserName)" />
        </div>

        <div class="form-group">
            <label>Пароль:</label>
            <InputText class="form-control" type="password" @bind-Value="_loginModel.Password" />
            <ValidationMessage For="@(() => _loginModel.Password)" />
        </div>

        <button type="submit">Войти</button>
    </EditForm>

    @if (!string.IsNullOrEmpty(_errorMessage))
    {
        <div class="error-message">@_errorMessage</div>
    }

    <div class="register-link">
        Нет аккаунта? <a href="/register">Зарегистрироваться</a>
    </div>
</div>

@code {
    private LoginModel _loginModel = new LoginModel();
    private string _errorMessage = string.Empty;
    
    
    private async Task HandleLogin()
    {
        var result = await AuthService.Login(_loginModel.UserName, _loginModel.Password);

        if(result)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            _errorMessage = "Неправильное имя пользователя или пароль."; 
        }
    }
}
