@page "/login"
@using Guide.Data.Models.Users
@using Guide.Ui.Components.Services
@inject NavigationManager NavigationManager
@inject AuthenticationService AuthService

<style>

    .login-form {
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 300px;
        margin: 50px auto;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .form-group {
        margin-bottom: 15px;
    }

    label {
        display: block;
        margin-bottom: 5px;
    }

    input[type="text"],
    input[type="password"] {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 3px;
        box-sizing: border-box;
    }

    button[type="submit"] {
        background-color: #4169e1;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 3px;
        cursor: pointer;
        width: 100%;
    }

    button[type="submit"]:hover {
        background-color: #284b90;
    }

    .password-input {
        position: relative;
    }

 
    .error-message {
        color: red;
        margin-top: 10px;
    }
</style>

<div class="login-form">
    <h3>Вход</h3>

    <EditForm Model="@_loginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Имя пользователя:</label>
            <InputText @bind-Value="_loginModel.UserName" />
        </div>
        <div class="form-group password-input">
            <label>Пароль:</label>
            <InputText @bind-Value="_loginModel.Password" InputType="@("password")" />
        </div>
        <button type="submit">Войти</button>
    </EditForm>

    @if (!string.IsNullOrEmpty(_errorMessage))
    {
        <div class="error-message">@_errorMessage</div>
    }
</div>

@code {
    private LoginModel _loginModel = new LoginModel();
    private string _errorMessage = string.Empty;
    
    
    private async Task HandleLogin()
    {
        var result = await AuthService.Login(_loginModel.UserName, _loginModel.Password);

        if(result)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            _errorMessage = "Неправильное имя пользователя или пароль."; 
        }
    }
}
